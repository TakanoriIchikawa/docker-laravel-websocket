version: "3.8"

services:
  app:
    container_name: laravel-websocket-app
    build:
      context: .
      dockerfile: ./docker/app/Dockerfile
    restart: always
    volumes:
      - type: bind
        source: ./src
        target: /var/www/html
      - type: volume
        source: php_fpm_socket
        target: /var/run/php-fpm

  web:
    container_name: laravel-websocket-web
    build:
      context: .
      dockerfile: ./docker/web/Dockerfile
    restart: always
    volumes:
      - type: bind
        source: ./src
        target: /var/www/html
      - type: volume
        source: php_fpm_socket
        target: /var/run/php-fpm
    ports:
      - "${WEB_PORT}:80"
    depends_on:
      - app

  db:
    container_name: laravel-websocket-db
    build:
      context: .
      dockerfile: ./docker/mysql/Dockerfile
    restart: always
    volumes:
      - type: volume
        source: mysql_volume
        target: /var/lib/mysql
    ports:
      - ${DB_PORT}:3306
    environment:
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_USER: ${DB_USERNAME}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}

  redis:
    container_name: laravel-websocket-redis
    image: "redis:latest"
    restart: always
    volumes:
      - type: volume
        source: redis-data
        target: /data
    ports:
      - "6379:6379"

  echo-server:
    container_name: laravel-websocket-echo-server
    build: ./docker/echo-server
    restart: always
    volumes:
      - type: bind
        source: ./src
        target: /work
    ports:
      - "6001:6001"

volumes:
  php_fpm_socket:
  mysql_volume:
  redis-data:

networks:
  default:
    name: laravel-websocket-network